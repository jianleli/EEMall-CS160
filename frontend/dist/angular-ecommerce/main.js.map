{"version":3,"sources":["./src/app/services/shop-cart.service.ts","./src/app/validator/eemall-validator.ts","./src/app/common/order.ts","./src/app/components/order-success/order-success.component.html","./src/app/components/order-success/order-success.component.ts","./src/app/components/shop-cart-detail/shop-cart-detail.component.html","./src/app/components/shop-cart-detail/shop-cart-detail.component.ts","./src/app/services/profile.service.ts","./src/environments/environment.ts","./src/app/common/purchase.ts","./src/app/components/laptop-details/laptop-details.component.ts","./src/app/components/laptop-details/laptop-details.component.html","./src/app/components/laptop-category-menu/laptop-category-menu.component.html","./src/app/components/laptop-category-menu/laptop-category-menu.component.ts","./src/app/components/profile/profile.component.html","./src/app/components/profile/profile.component.ts","./src/app/components/checkout/checkout.component.ts","./src/app/components/checkout/checkout.component.html","./src/app/components/shop-cart-status/shop-cart-status.component.ts","./src/app/components/shop-cart-status/shop-cart-status.component.html","./src/app/components/search/search.component.ts","./src/app/components/search/search.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/common/order-item.ts","./src/app/app.module.ts","./src/app/services/shop-checkout.service.ts","./src/app/auth.service.ts","./src/app/services/eemall-form.service.ts","./src/app/components/login-status/login-status.component.html","./src/app/components/login-status/login-status.component.ts","./src/app/components/laptop-list/laptop-list.component.ts","./src/app/components/laptop-list/laptop-list-grid.component.html","./src/app/common/laptop.ts","./src/app/auth.guard.ts","./src/app/components/sign-up/sign-up.component.ts","./src/app/components/sign-up/sign-up.component.html","./src/app/services/laptop.service.ts","./src/app/common/shop-cart-item.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { ShopCartItem } from '../common/shop-cart-item';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ShopCartService {\n\n  shopCartItems: ShopCartItem[] = [];\n\n  totalPrice: Subject<number> = new BehaviorSubject<number>(0);\n  totalQuantity: Subject<number> = new BehaviorSubject<number>(0);\n  orderDone_orderTrackingNumber: Subject<string> = new BehaviorSubject<string>(\"\");\n  \n  constructor() { }\n\n  addToShopCart(cartItem: ShopCartItem){\n    // check if we already have the laptop in our shopping cart\n    let theItemIsInShopCart: boolean = false;\n    let existingShopCartProduct: ShopCartItem = null;\n\n    if (this.shopCartItems.length > 0){\n      //find out the laptop in the cart based on its id\n\n      for (let tempItem of this.shopCartItems) {\n        if (tempItem.id === cartItem.id) {\n          existingShopCartProduct = tempItem;\n          break;\n        }\n      }\n\n      // existingShopCartProduct = this.shopCartItems.find( ele => ele.id === cartItem.id);\n      //check if we have found it\n\n      if (existingShopCartProduct != null) {\n        theItemIsInShopCart = true;\n      } else {\n        theItemIsInShopCart = false;\n      }\n\n    }\n\n    if (theItemIsInShopCart) {\n      // add item into the quantity\n      existingShopCartProduct.quantity++;\n    } else {\n      //push my item into the item array\n      this.shopCartItems.push(cartItem);\n    }\n\n    // calculate the total price and total quantity in my shopping cart\n    this.countCartTotals();\n  }\n\n\n\n  countCartTotals(){\n    let tempTotalPrice: number = 0;\n    let tempTotalQuantity: number = 0;\n\n    // for (let curItem of this.shopCartItems) {\n    //   tempTotalPrice = tempTotalPrice + curItem.quantity * curItem.unitPrice;\n    //   tempTotalQuantity = tempTotalQuantity + curItem.quantity;\n    // }\n\n    this.shopCartItems.forEach((curItem) => {\n      tempTotalPrice = tempTotalPrice + curItem.quantity * curItem.unitPrice;\n      tempTotalQuantity = tempTotalQuantity + curItem.quantity;\n    });\n\n\n    //publish the new updated values to all subscribers, they will receive the updated data\n    this.totalPrice.next(tempTotalPrice);\n    this.totalQuantity.next(tempTotalQuantity);\n\n    // console cart data for debug\n    this.printCartData(tempTotalPrice, tempTotalQuantity);\n  }\n\n  printCartData(tempTotalPrice: number, tempTotalQuantity: number) {\n    console.log('Contents of the shopping cart');\n    for (let tempItem of this.shopCartItems) {\n      const subTotalPrice = tempItem.quantity * tempItem.unitPrice;\n      console.log(`name: ${tempItem.name}, quantity=${tempItem.quantity}, unitPrice=${tempItem.unitPrice}, subTotalPrice=${subTotalPrice}`);\n    }\n\n    console.log(`totalPrice: ${tempTotalPrice}, totalQuantity: ${tempTotalQuantity}`)\n    console.log('-------------')\n  }\n\n  decreaseQuantity(reducedCartItem: ShopCartItem) {\n    // reducedCartItem.quantity--;\n    reducedCartItem.quantity = reducedCartItem.quantity - 1;\n\n    if (reducedCartItem.quantity === 0) {\n      this.delete(reducedCartItem);\n    } else {\n      this.countCartTotals();\n    } \n  }\n\n  delete(tempItem: ShopCartItem) {\n    const idx = this.shopCartItems.findIndex(\n      (ele) => (ele.id === tempItem.id)\n    );\n\n    if (idx > -1){\n      this.shopCartItems.splice(idx, 1);\n\n      this.countCartTotals();\n    }\n  }\n}\n","import { FormControl, ValidationErrors } from \"@angular/forms\";\n\nexport class EEmallValidator {\n        // detect whitespace \n        static detectOnlyWhitespace(control: FormControl) : ValidationErrors {\n        \n            // check if string only contains whitespace\n            // if invalid, return error object, otherwise return null\n            return ((control.value != null) && (control.value.trim().length === 0)) ? { 'notOnlyWhitespace': true } : null;\n        }\n}\n","export class Order {\n    totalQuantity: number;\n    totalPrice: number;\n}\n","<div class=\"main-content\">\n    <div class=\"section-content section-content-p30\">\n        <div class=\"container-fluid\">\n\n\n            <div *ngIf=\"orderDoneCartItems.length > 0\">\n\n                <table class=\"table table-bordered\">\n                    <!-- <tr>\n                        <th width=\"20%\">Item Image</th>\n                        <th width=\"50%\">Item Detail</th>\n                        <th width=\"30%\"></th>\n                    </tr> -->\n\n                    <tr *ngFor=\"let shopCartItem of orderDoneCartItems\">\n                        <td>\n                            <img src=\"{{shopCartItem.imageUrl}}\" class=\"img-responsive\" width=\"150px\" />\n                        </td>\n                        <td>\n                            <p>{{shopCartItem.name}}</p>\n                            <p>{{shopCartItem.unitPrice | currency: 'USD'}}</p>\n                        </td>\n                        <td>\n                            <div class=\"items\">\n                                <label>Quantity: {{shopCartItem.quantity}}</label> \n                            </div>\n\n                            <p class=\"mt-2\">Subtotal: {{shopCartItem.quantity * shopCartItem.unitPrice | currency: 'USD'}}</p>\n                        </td>\n                    </tr>\n\n                    <tr>\n                        <td colspan=\"2\"></td>\n                        <!-- <td style=\"font-weight: bold\"> -->\n                        <td>\n                            <p>Total Quantity: {{ orderDoneTotalQuantity }}</p>\n                            <p>Shipping: FREE</p>\n                            <p>Total Price: {{orderDoneTotalPrice | currency: 'USD'}}</p>\n                        </td>\n                    </tr>\n                </table>\n\n                <br>\n                <br>\n                <h1 style=\"color: rgba(0,0,0,0.8)\">Your order has been received.</h1>\n                <h4 style=\"color: #dc3545;\">Order tracking number: {{ orderDoneTrackingNumber }}</h4>\n                <br>\n                <button (click)=\"fireSubmit()\" type=\"submit\" class=\"btn btn-outline-danger\">Back to home</button>\n\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Order } from 'src/app/common/order';\nimport { ShopCartItem } from 'src/app/common/shop-cart-item';\nimport { ShopCartService } from 'src/app/services/shop-cart.service';\nimport { ShopCheckoutService } from 'src/app/services/shop-checkout.service';\nimport { CheckoutComponent } from '../checkout/checkout.component';\n\n@Component({\n  selector: 'app-order-success',\n  templateUrl: './order-success.component.html',\n  styleUrls: ['./order-success.component.css']\n})\nexport class OrderSuccessComponent implements OnInit {\n\n    orderDoneTrackingNumber: string = null;\n    orderNum: Order = null;\n    orderDoneCartItems: ShopCartItem[] = [];\n    orderDoneTotalPrice: number = 0;\n    orderDoneTotalQuantity: number = 0;\n\n    constructor(private shoppingCartService: ShopCartService, private checkoutService :ShopCheckoutService, private router: Router) { }\n\n    ngOnInit(): void {\n      this.displayShopCartDetails();\n    }\n\n    displayShopCartDetails(){\n      // get a handle to the cart items\n      this.orderDoneCartItems = this.shoppingCartService.shopCartItems;\n\n      // subscribe to the cart totalPrice\n      this.shoppingCartService.totalPrice.subscribe(\n        (res) => {\n          this.orderDoneTotalPrice = res\n        }\n      );\n\n      //subscribe to the cart totalQuantity\n      this.shoppingCartService.totalQuantity.subscribe(\n        (res) => {\n          this.orderDoneTotalQuantity = res\n        }\n      );\n\n      this.shoppingCartService.orderDone_orderTrackingNumber.subscribe(\n        (res) => {\n          this.orderDoneTrackingNumber = res;\n        }\n      )\n\n      // compute cart total price and quantity\n      this.shoppingCartService.countCartTotals();\n    }\n\n    fireSubmit(){\n      console.log(\"onSubmit => fire!\")\n      \n      // reset my shopping cart data\n      this.shoppingCartService.shopCartItems = [];\n      this.shoppingCartService.totalPrice.next(0);\n      this.shoppingCartService.totalQuantity.next(0);\n      // redirect back to the products page\n      this.router.navigateByUrl(\"/product\");\n    }\n}","<div class=\"main-content\">\n    <div class=\"section-content section-content-p30\">\n        <div class=\"container-fluid\">\n\n\n            <div *ngIf=\"shoppingCartItems.length > 0\">\n\n                <table class=\"table table-bordered\">\n                    <tr>\n                        <th width=\"20%\">Item Image</th>\n                        <th width=\"50%\">Item Detail</th>\n                        <th width=\"30%\"></th>\n                    </tr>\n\n                    <tr *ngFor=\"let shopCartItem of shoppingCartItems\">\n                        <td>\n                            <img src=\"{{shopCartItem.imageUrl}}\" class=\"img-responsive\" width=\"150px\" />\n                        </td>\n                        <td>\n                            <p>{{shopCartItem.name}}</p>\n                            <p>{{shopCartItem.unitPrice | currency: 'USD'}}</p>\n                        </td>\n                        <td>\n                            <div class=\"items\">\n                                <label>Quantity:</label> \n\n                                <div class=\"row no-gutters\">\n                                    <div class=\"col\">\n                                        <button (click)=\"addQuantity(shopCartItem)\" class=\"btn btn-outline-danger\">\n                                            <i class=\"fas fa-plus\"></i>\n                                        </button>\n                                    </div>\n\n                                    <div class=\"col ml-4 mr-2\" style=\"font-size: 25px;\">\n                                       {{shopCartItem.quantity}}\n                                    </div>\n\n                                    <div class=\"col\">\n                                        <button (click)=\"reduceQuantity(shopCartItem)\" class=\"btn btn-outline-danger\">\n                                            <i class=\"fas fa-minus\"></i>\n                                        </button>\n                                    </div>\n\n                                    <div class=\"col-8\"></div>\n                                </div>\n\n                            </div>\n\n                            <button (click)=\"deleteFromCart(shopCartItem)\" class=\"btn btn-outline-danger mt-4\" >Remove</button>\n\n                            <p class=\"mt-2\">Subtotal: {{shopCartItem.quantity * shopCartItem.unitPrice | currency: 'USD'}}</p>\n                        </td>\n                    </tr>\n\n                    <tr>\n                        <td colspan=\"2\"></td>\n                        <!-- <td style=\"font-weight: bold\"> -->\n                        <td>\n                            <p>Total Quantity: {{ totalQuantity }}</p>\n                            <p>Shipping: FREE</p>\n                            <p>Total Price: {{totalPrice | currency: 'USD'}}</p>\n                            <a routerLink=\"/checkout\" class=\"btn btn-outline-danger\">Checkout</a>\n                        </td>\n                    </tr>\n\n                </table>\n\n            </div>\n\n            <!-- if cart is empty then display a message -->\n            <div *ngIf=\"shoppingCartItems.length == 0\" class=\"alert alert-warning-outline col-md-12\" role=\"alert\">\n                Your shopping cart is empty, you may add some items.\n            </div>\n\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ShopCartItem } from 'src/app/common/shop-cart-item';\nimport { ShopCartService } from 'src/app/services/shop-cart.service';\n\n@Component({\n  selector: 'app-shop-cart-detail',\n  templateUrl: './shop-cart-detail.component.html',\n  styleUrls: ['./shop-cart-detail.component.css']\n})\nexport class ShopCartDetailComponent implements OnInit {\n\n  shoppingCartItems: ShopCartItem[] = [];\n  totalPrice: number = 0;\n  totalQuantity: number = 0;\n\n  constructor(private shoppingCartService: ShopCartService) { }\n\n  ngOnInit(): void {\n    this.displayShopCartDetails();\n  }\n\n  displayShopCartDetails(){\n    // get a handle to the cart items\n    this.shoppingCartItems = this.shoppingCartService.shopCartItems;\n\n    // subscribe to the cart totalPrice\n    this.shoppingCartService.totalPrice.subscribe(\n      (res) => {\n        this.totalPrice = res\n      }\n    );\n\n    //subscribe to the cart totalQuantity\n    this.shoppingCartService.totalQuantity.subscribe(\n      (res) => {\n        this.totalQuantity = res\n      }\n    );\n\n    // compute cart total price and quantity\n    this.shoppingCartService.countCartTotals();\n  }\n\n  addQuantity(addedCartItem: ShopCartItem){\n    this.shoppingCartService.addToShopCart(addedCartItem);\n  }\n\n  reduceQuantity(reducedCartItem: ShopCartItem) {\n    this.shoppingCartService.decreaseQuantity(reducedCartItem)\n  }\n\n  deleteFromCart(dItem: ShopCartItem){\n    this.shoppingCartService.delete(dItem);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AuthService } from '../auth.service';\nimport { Observable } from 'rxjs';\nimport { Address } from '../common/address';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProfileService {\n\n  private profileBaseUrl = 'http://3.21.204.124:8080/profile';\n\n  private ordersBaseUrl = 'http://3.21.204.124:8080/orders';\n\n  constructor(private http: HttpClient, private auth: AuthService) { }\n\n  getUserProfile(): Observable<UserResponse> {\n    const profileUrl = `${this.profileBaseUrl}/${this.auth.userEmail}`;\n    return this.http.get<UserResponse>(profileUrl);\n  }\n\n  getOrderRecords(): Observable<OrderRecord[]> {\n    const orderRecordUrl = `${this.ordersBaseUrl}/${this.auth.userEmail}`;\n    return this.http.get<OrderRecord[]>(orderRecordUrl);\n  }\n}\n\ninterface UserResponse {\n  email: string,\n  name: string,\n  phone: string,\n  address: string,\n}\n\ninterface OrderRecord {\n  orderTrackingNumber: string,\n  totalQuantity: number,\n  totalPrice: number,\n  dateCreated: string,\n  lastUpdated: string,\n  shippingAddress: Address  \n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","\nimport { Address } from \"./address\";\nimport { Customer } from \"./customer\";\nimport { Order } from \"./order\";\nimport { OrderItem } from \"./order-item\";\n\nexport class Purchase {\n    customer: Customer;\n    shipAddress: Address;\n    billAddress: Address;\n    order: Order;\n    orderItems: OrderItem[]; \n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {Laptop} from 'src/app/common/laptop';\nimport { ShopCartItem } from 'src/app/common/shop-cart-item';\nimport { LaptopService } from 'src/app/services/laptop.service';\nimport { ShopCartService } from 'src/app/services/shop-cart.service';\n\n@Component({\n  selector: 'app-laptop-details',\n  templateUrl: './laptop-details.component.html',\n  styleUrls: ['./laptop-details.component.css']\n})\nexport class LaptopDetailsComponent implements OnInit {\n\n  laptop: Laptop = new Laptop();\n\n  constructor(private LaptopService: LaptopService, private route: ActivatedRoute, private cartService: ShopCartService) { }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(()=>{\n      //get the id param string\n      //convert stirng to a number using + operator\n      const laptopId: number = +this.route.snapshot.paramMap.get('id');\n\n      this.LaptopService.getLaptop(laptopId).subscribe(\n        (res) => {\n          this.laptop = res;\n        }\n      );\n    })\n  }\n\n\n  addToLaptopDetailCart() {\n    console.log(`Adding to cart: ${this.laptop.name}, ${this.laptop.unitPrice}`);\n    const cartItem = new ShopCartItem(this.laptop);\n    this.cartService.addToShopCart(cartItem);\n  }\n\n\n\n\n\n  // handleLaptopDetails(){\n  //   //get the id param string\n  //   //convert stirng to a number using + operator\n  //   const laptopId: number = +this.route.snapshot.paramMap.get('id');\n\n  //   this.LaptopService.getLaptop(laptopId).subscribe(\n  //     res => {\n  //       this.laptop = res;\n  //     }\n  //   );\n  // }\n\n}\n","<div class=\"detail-section\">\n    <div class=\"container-fluid\">\n        \n        <img src=\"{{laptop.imageUrl}}\" class=\"detail-img\">\n\n        <h2>{{laptop.name}}</h2>\n\n        <div class=\"price\">{{laptop.unitPrice | currency:'USD'}}</div>\n        <!-- <button (click)=\"addToLaptopDetailCart()\" class=\"btn btn-danger\">Add to cart</button> -->\n        <button (click)=\"addToLaptopDetailCart()\" class=\"btn btn-outline-danger\">Add to cart</button>\n        \n        <hr/>\n        <h3>Description</h3>\n        <p>{{laptop.description}}</p>\n\n        <a routerLink=\"/product\" class=\"mt-5\">Back to Laptop List Page</a>\n    </div>\n</div>\n","<!-- <p>laptop-category-menu works!</p> -->\n\n<div class=\"menu-sidebar-content js-scrollbar1\" >\n    <nav class=\"navbar-sidebar\">\n        <ul class=\"list-unstyled navbar-list\">\n\n            <li *ngFor=\"let laptopCategory of laptopCategories\">\n                <a routerLink=\"/categories/{{ laptopCategory.id }}\" routerLinkActive=\"active-link\">\n                    {{ laptopCategory.categoryName }}\n                </a>\n            </li>\n\n            <!-- <li>\n                <a routerLink=\"/category/1\" routerLinkActive=\"active-link\">PC</a>\n            </li>\n            <li>\n                <a routerLink=\"/category/2\" routerLinkActive=\"active-link\">Laptop</a>\n            </li> -->\n        </ul>\n    </nav>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { LaptopCategory } from 'src/app/common/laptop-category';\nimport { LaptopService } from 'src/app/services/laptop.service';\n\n@Component({\n  selector: 'app-laptop-category-menu',\n  templateUrl: './laptop-category-menu.component.html',\n  styleUrls: ['./laptop-category-menu.component.css']\n})\nexport class LaptopCategoryMenuComponent implements OnInit {\n\n  laptopCategories: LaptopCategory[];\n\n  constructor(private laptopService: LaptopService) { }\n\n  ngOnInit(): void {\n    this.laptopService.getLaptopCategories().subscribe(\n      arrData => {\n        console.log('Product Categories=' + JSON.stringify(arrData));\n        this.laptopCategories = arrData;\n      }\n    );\n  }\n}\n","<div class=\"main-content\">\n    <div class=\"section-content section-content-p30\">\n        <div class=\"container-fluid\">\n            <div class=\"profile-container\">\n                <h3>User Profile</h3>\n                <div class=\"profile-title\">User Email: <span>{{email}}</span></div>\n                <div class=\"profile-title\">User Name: <span>{{name}}</span></div>\n                <div class=\"profile-title\">Phone Number: <span>{{phone}}</span></div>\n                <div class=\"profile-title\">Address: <span>{{address}}</span></div>\n            </div>\n               \n            <div class=\"profile-container\">\n                <h3>Order History</h3>\n                <div *ngFor=\"let order of orderList\" class=\"order-container\">\n                    <div>\n                        <span class=\"order-field-title\">Tracking Number: </span>\n                        <span>{{order.orderTrackingNumber}}</span>\n                    </div>\n                    <div>\n                        <span class=\"order-field-title\">Quantity: </span>\n                        <span>{{order.totalQuantity}}</span>\n                    </div>\n                    <div>\n                        <span class=\"order-field-title\">Price: </span>\n                        <span>{{order.totalPrice}}</span>\n                    </div>\n                    <div>\n                        <span class=\"order-field-title\">Shipping: </span>\n                        <span>{{order.shippingAddress.street}}</span>\n                        <span>, </span>\n                        <span>{{order.shippingAddress.city}}</span>\n                        <span>, </span>\n                        <span>{{order.shippingAddress.state}}</span>\n                        <span>, </span>\n                        <span>{{order.shippingAddress.zipCode}}</span>\n                    </div>\n                </div>\n                \n            </div>\n\n        </div>\n    </div>\n</div>        \n","import { Component, OnInit } from '@angular/core';\nimport { ProfileService } from 'src/app/services/profile.service';\nimport { Address } from '../../common/address';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  email: string = \"\";\n  name: string = \"\";\n  phone: string = \"\";\n  address: string = \"\";\n  orderList: OrderRecord[] = [];\n\n\n  constructor(private profileService: ProfileService) { }\n\n  ngOnInit(): void {\n    this.displayUserProfile()\n    this.didsplayOrderList()\n  }\n\n  displayUserProfile() {\n    this.profileService.getUserProfile().subscribe(data => {\n      this.email = data.email;\n      this.name = data.name;\n      this.address = data.address;\n      this.phone = data.phone;\n    })\n  }\n\n  didsplayOrderList() {\n    this.profileService.getOrderRecords().subscribe(arrObj => {\n      this.orderList = arrObj;\n    })\n  }\n\n}\n\ninterface OrderRecord {\n  orderTrackingNumber: string,\n  totalQuantity: number,\n  totalPrice: number,\n  dateCreated: string,\n  lastUpdated: string,\n  shippingAddress: Address  \n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Country } from 'src/app/common/country';\nimport { Order } from 'src/app/common/order';\nimport { OrderItem } from 'src/app/common/order-item';\nimport { Purchase } from 'src/app/common/purchase';\nimport { State } from 'src/app/common/state';\nimport { EEmallFormService } from 'src/app/services/eemall-form.service';\nimport { ShopCartService } from 'src/app/services/shop-cart.service';\nimport { ShopCheckoutService } from 'src/app/services/shop-checkout.service';\nimport { EEmallValidator } from 'src/app/validator/eemall-validator';\n\n@Component({\n  selector: 'app-checkout',\n  templateUrl: './checkout.component.html',\n  styleUrls: ['./checkout.component.css']\n})\nexport class CheckoutComponent implements OnInit {\n\n  LaptopsCheckoutFormGroup: FormGroup\n  totalPrice: number = 0;\n  totalQuantity: number = 0;\n\n  creditCardYears: number[] = [];\n  creditCardMonths: number[] = [];\n  shipAddressStates: State[] = [];\n\n  countries: Country[] = [];\n  \n  constructor(private formBuilder: FormBuilder, private router: Router, private shopCheckoutService :ShopCheckoutService, \n    private eeFormService :EEmallFormService, private shopCartService : ShopCartService) { \n\n  }\n\n  ngOnInit(): void {\n\n    this.checkShoppingCartDetails();\n    \n    this.LaptopsCheckoutFormGroup = this.formBuilder.group({\n      customer: this.formBuilder.group({\n        firstName: new FormControl('', [Validators.required, Validators.minLength(3), EEmallValidator.detectOnlyWhitespace]),\n        lastName: new FormControl('', [Validators.required, Validators.minLength(3), EEmallValidator.detectOnlyWhitespace]),\n        email: new FormControl('', [Validators.required, Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$')])\n      }),\n      shipAddress: this.formBuilder.group({\n        street: new FormControl('', [Validators.required, Validators.minLength(3), EEmallValidator.detectOnlyWhitespace]),\n        city: new FormControl('', [Validators.required, Validators.minLength(3), EEmallValidator.detectOnlyWhitespace]),\n        state: new FormControl('', [Validators.required]),\n        country: new FormControl('', [Validators.required]),\n        zipCode: new FormControl('', [Validators.required, Validators.minLength(3), EEmallValidator.detectOnlyWhitespace])\n      }),\n      creditCard: this.formBuilder.group({\n        cardType: new FormControl('', [Validators.required]),\n        nameOnCard: new FormControl('', [Validators.required, Validators.minLength(3), EEmallValidator.detectOnlyWhitespace]),\n        cardNumber: new FormControl('', [Validators.required, Validators.pattern('[0-9]{16}')]),\n        securityCode: new FormControl('', [Validators.required, Validators.pattern('[0-9]{3}')]),\n        expirationMonth: [''],\n        expirationYear: ['']\n      })\n    });\n\n    \n    // generate credit card months\n    const startm: number = new Date().getMonth() + 1;\n    console.log(\"startMonth: \" + startm);\n\n    this.eeFormService.getCreditCardMonths(startm).subscribe((res) => {\n        console.log(\"Retrieved credit card months: \" + JSON.stringify(res));\n        this.creditCardMonths = res;\n    });\n\n    // populate credit card years\n    this.eeFormService.getCreditCardYears().subscribe(\n      data => {\n        console.log(\"Retrieved credit card years: \" + JSON.stringify(data));\n        this.creditCardYears = data;\n      }\n    );\n\n    //generate countries\n    this.eeFormService.getCountries().subscribe((res) => {\n      console.log(\"Retrieved countries: \" + JSON.stringify(res));\n      this.countries = res;\n    });\n  }\n\n\n  checkShoppingCartDetails() {\n\n    // fetch cartService.totalQuantity\n    this.shopCartService.totalQuantity.subscribe((tq) => {\n        this.totalQuantity = tq;\n    });\n\n    // fetch to cartService.totalPrice\n    this.shopCartService.totalPrice.subscribe((tp) => {\n        this.totalPrice = tp;\n    });\n  }\n\n\n  onSubmit() {\n    console.log(\"Handling the submit button\");\n\n    if (this.LaptopsCheckoutFormGroup.invalid) {\n      this.LaptopsCheckoutFormGroup.markAllAsTouched();\n      return;\n    }\n\n    \n    //create an order\n    let order = new Order();\n    order.totalPrice = this.totalPrice;\n    order.totalQuantity = this.totalQuantity;\n\n    //get item from shopping cart\n    const shopCartItems = this.shopCartService.shopCartItems;\n\n    //create an order item\n    let orderItems: OrderItem[] = [];\n    for (let i=0; i < shopCartItems.length; i++) {\n      orderItems[i] = new OrderItem(shopCartItems[i]);\n    }\n\n\n    /** debug for my checkout form group */\n    console.log(this.LaptopsCheckoutFormGroup.get('customer').value);\n    console.log(\"The email address is \" + this.LaptopsCheckoutFormGroup.get('customer').value.email);\n\n    console.log(\"The shipping address country is \" + this.LaptopsCheckoutFormGroup.get('shipAddress').value.country.name);\n    console.log(\"The shipping address state is \" + this.LaptopsCheckoutFormGroup.get('shipAddress').value.state.name);\n\n    //create a purchase\n    let purchase = new Purchase();\n\n    purchase.customer = this.LaptopsCheckoutFormGroup.controls['customer'].value;\n\n    //populate a purchase for customer\n    purchase.shipAddress = this.LaptopsCheckoutFormGroup.controls['shipAddress'].value;\n    const shipState: State = JSON.parse(JSON.stringify(purchase.shipAddress.state));\n    const shipCountry: Country = JSON.parse(JSON.stringify(purchase.shipAddress.country));\n    purchase.shipAddress.state = shipState.name;\n    purchase.shipAddress.country = shipCountry.name;\n\n\n\n    // populate my order and orderItems\n    purchase.order = order;\n    purchase.orderItems = orderItems;\n\n\n      // call REST API via my CheckoutService\n    this.shopCheckoutService.handleOrder(purchase).subscribe({\n        next: (res) => {\n          console.log(res);\n          // alert(`Your order has been received.\\nOrder tracking number: ${res.orderTrackingNumber}`);\n          this.shopCartService.orderDone_orderTrackingNumber.next(res.orderTrackingNumber);\n          console.log(this.shopCartService.orderDone_orderTrackingNumber);\n          console.log(res.orderTrackingNumber);\n\n          // reset cart\n          // this.resetCart();\n          this.router.navigateByUrl(\"/order-success\");\n\n        },\n        error: (error) => {\n          alert(`There was an error: ${error.message}`);\n        }\n      }\n    );\n\n  }\n\n\n\n  selectedMonthsAndYears(){\n\n    const creditCardFormGroup = this.LaptopsCheckoutFormGroup.get('creditCard');\n\n    const curYear: number = new Date().getFullYear();\n    const selectedYear: number = Number(creditCardFormGroup.value.expirationYear);\n\n    // if the current year equals the selected year, then start with the current month\n    let beginMonth: number;\n\n    beginMonth = (curYear === selectedYear) ? new Date().getMonth() + 1 : 1;\n\n    this.eeFormService.getCreditCardMonths(beginMonth).subscribe((res) => {\n      console.log(\"Retrieved credit card months: \" + JSON.stringify(res));\n      this.creditCardMonths = res;\n    })\n  }\n\n\n  getStates(formGroupName: string) {\n    const formGroup = this.LaptopsCheckoutFormGroup.get(formGroupName);\n    console.log(formGroup);\n    const cCode = formGroup.value.country.code;\n    const cName = formGroup.value.country.name;\n\n    console.log(`${formGroupName} country code: ${cCode}`);\n    console.log(`${formGroupName} country name: ${cName}`);\n\n    this.eeFormService.getStates(cCode).subscribe( (ele) => {\n\n        if (formGroupName === 'shipAddress') {\n          this.shipAddressStates = ele;\n        } \n        formGroup.get('state').setValue(ele[0]);\n    });\n  }\n\n  get firstName() {\n    return this.LaptopsCheckoutFormGroup.get('customer.firstName');\n  }\n  get lastName() {\n    return this.LaptopsCheckoutFormGroup.get('customer.lastName');\n  }\n  get email() {\n    return this.LaptopsCheckoutFormGroup.get('customer.email');\n  }\n\n  get shipAddressStreet() {\n    return this.LaptopsCheckoutFormGroup.get('shipAddress.street');\n  }\n  get shipAddressCity() {\n    return this.LaptopsCheckoutFormGroup.get('shipAddress.city');\n  }\n  get shipAddressState() {\n    return this.LaptopsCheckoutFormGroup.get('shipAddress.state');\n  }\n  get shipAddressZipCode() {\n    return this.LaptopsCheckoutFormGroup.get('shipAddress.zipCode');\n  }\n  get shipAddressCountry() {\n    return this.LaptopsCheckoutFormGroup.get('shipAddress.country');\n  }\n\n\n\n  get creditCardType() { \n    return this.LaptopsCheckoutFormGroup.get('creditCard.cardType'); \n  }\n  get creditCardNameOnCard() { \n    return this.LaptopsCheckoutFormGroup.get('creditCard.nameOnCard'); \n  }\n  get creditCardNumber() { \n    return this.LaptopsCheckoutFormGroup.get('creditCard.cardNumber'); \n  }\n  get creditCardSecurityCode() { \n    return this.LaptopsCheckoutFormGroup.get('creditCard.securityCode'); \n  }\n}\n","<div class=\"main-content page-m\">\n    <div class=\"section-content section-content-p30\">\n        <div class=\"container-fluid\">\n\n\n            <form [formGroup]=\"LaptopsCheckoutFormGroup\" (ngSubmit)=\"onSubmit()\">\n\n                <!-- customer form group -->\n                <div formGroupName=\"customer\" class=\"form-area\">\n                    <h3>Customer</h3>\n\n                    <div class=\"row\">\n                        <div class=\"col-md-2\"> <label>First Name</label></div>\n                        <div class=\"col-md-9\">\n                            <div class=\"input-space\">\n                                <input formControlName=\"firstName\" type=\"text\">\n\n                                <div *ngIf=\"firstName.invalid && (firstName.dirty || firstName.touched)\" style=\"color:#dc3545;\">\n\n                                    <div *ngIf=\"firstName.errors.required || firstName.errors.detectOnlyWhitespace\">\n                                        First Name is required\n                                    </div>\n\n                                    <div *ngIf=\"firstName.errors.minlength\">\n                                        First Name must be at least 3 characters long\n                                    </div>\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"row\">\n                        <div class=\"col-md-2\"> <label>Last Name</label></div>\n                        <div class=\"col-md-9\">\n                            <div class=\"input-space\">\n                                <input formControlName=\"lastName\" type=\"text\">\n                                <div *ngIf=\"lastName.invalid && (lastName.dirty || lastName.touched)\" style=\"color:#dc3545;\">\n\n                                    <div *ngIf=\"lastName.errors.required || lastName.errors.detectOnlyWhitespace\">\n                                        Last Name is required\n                                    </div>\n\n                                    <div *ngIf=\"lastName.errors.minlength\">\n                                        Last Name must be at least 3 characters long\n                                    </div>\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"row\">\n                        <div class=\"col-md-2\"> <label>Email</label></div>\n                        <div class=\"col-md-9\">\n                            <div class=\"input-space\">\n                                <input formControlName=\"email\" type=\"text\">\n                                <div *ngIf=\"email.invalid && (email.dirty || email.touched)\" style=\"color:#dc3545;\">\n\n                                    <div *ngIf=\"email.errors.required\">\n                                        Email is required\n                                    </div>\n\n                                    <div *ngIf=\"email.errors.pattern\">\n                                        Email format: \"example@gmail.com\"\n                                    </div>\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n\n                <!-- customer's shipping Address -->\n                <div formGroupName=\"shipAddress\" class=\"form-area\">\n                    <h3>Shipping Address</h3>\n\n                    <div class=\"row\">\n                        <div class=\"col-md-2\"> <label>Country</label></div>\n                        <div class=\"col-md-9\">\n                            <div class=\"input-space\">\n                                <select formControlName=\"country\" (change)=\"getStates('shipAddress')\">\n                                    <option *ngFor=\"let tmpCoutry of countries\" [ngValue]=\"tmpCoutry\">\n                                        {{ tmpCoutry.name }}\n                                    </option>\n                                </select>\n\n                                <div *ngIf=\"shipAddressCountry.invalid && (shipAddressCountry.dirty || shipAddressCountry.touched)\" style=\"color:#dc3545;\">\n                                    <div *ngIf=\"shipAddressCountry.errors.required\">\n                                        Country is required\n                                    </div>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"row\">\n                        <div class=\"col-md-2\"> <label>Street</label></div>\n                        <div class=\"col-md-9\">\n                            <div class=\"input-space\">\n                                <input formControlName=\"street\" type=\"text\">\n\n                                <div *ngIf=\"shipAddressStreet.invalid && (shipAddressStreet.dirty || shipAddressStreet.touched)\" style=\"color:#dc3545;\">\n                                    <div *ngIf=\"shipAddressStreet.errors.required || shipAddressStreet.errors.detectOnlyWhitespace\">\n                                        Street is required\n                                    </div>\n                                    <div *ngIf=\"shipAddressStreet.errors.minlength\">\n                                        Street must be at least 3 characters long\n                                    </div>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"row\">\n                        <div class=\"col-md-2\"> <label>City</label></div>\n                        <div class=\"col-md-9\">\n                            <div class=\"input-space\">\n                                <input formControlName=\"city\" type=\"text\">\n\n                                <div *ngIf=\"shipAddressCity.invalid && (shipAddressCity.dirty || shipAddressCity.touched)\" style=\"color:#dc3545;\">\n                                    <div *ngIf=\"shipAddressCity.errors.required || shipAddressCity.errors.detectOnlyWhitespace\">\n                                        City is required\n                                    </div>\n                                    <div *ngIf=\"shipAddressCity.errors.minlength\">\n                                        City must be at least 3 characters long\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"row\">\n                        <div class=\"col-md-2\"> <label>State</label></div>\n                        <div class=\"col-md-9\">\n                            <div class=\"input-space\">\n                                <select formControlName=\"state\">\n                                    <option *ngFor=\"let tmpState of shipAddressStates\" [ngValue]=\"tmpState\">\n                                        {{ tmpState.name }}\n                                    </option>\n                                </select>\n\n\n                                <div *ngIf=\"shipAddressState.invalid && (shipAddressState.dirty || shipAddressState.touched)\" style=\"color:#dc3545;\">\n                                    <div *ngIf=\"shipAddressState.errors.required\">\n                                        State is required\n                                    </div>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"row\">\n                        <div class=\"col-md-2\"> <label>Zip Code</label></div>\n                        <div class=\"col-md-9\">\n                            <div class=\"input-space\">\n                                <input formControlName=\"zipCode\" type=\"text\">\n\n\n                                <div *ngIf=\"shipAddressZipCode.invalid && (shipAddressZipCode.dirty || shipAddressZipCode.touched)\" style=\"color:#dc3545;\">\n                                    <div *ngIf=\"shipAddressZipCode.errors.required || shipAddressZipCode.errors.detectOnlyWhitespace\">\n                                        Zip Code is required\n                                    </div>\n                                    <div *ngIf=\"shipAddressZipCode.errors.minlength\">\n                                        Zip Code must be at least 3 characters long\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n\n \n\n                <!-- Credit Card -->\n                <div formGroupName=\"creditCard\" class=\"form-area\">\n                    <h3>Credit Card</h3>\n\n                    <div class=\"row\">\n                        <div class=\"col-md-2\"> <label>Card Type</label></div>\n                        <div class=\"col-md-9\">\n                            <div class=\"input-space\">\n                                <select formControlName=\"cardType\">\n                                    <option>Visa</option>\n                                    <option>Mastercard</option>\n                                </select>\n\n                                <div *ngIf=\"creditCardType.invalid && (creditCardType.dirty || creditCardType.touched)\" style=\"color:#dc3545;\">\n                                    <div *ngIf=\"creditCardType.errors.required\">\n                                        Credit card type is required\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"row\">\n                        <div class=\"col-md-2\"> <label>Name on Card</label></div>\n                        <div class=\"col-md-9\">\n                            <div class=\"input-space\">\n                                <input formControlName=\"nameOnCard\" type=\"text\">\n\n                                <div *ngIf=\"creditCardNameOnCard.invalid && (creditCardNameOnCard.dirty || creditCardNameOnCard.touched)\" style=\"color:#dc3545;\">\n                                    <div *ngIf=\"creditCardNameOnCard.errors.required || creditCardNameOnCard.errors.notOnlyWhitespace\">\n                                        Name is required\n                                    </div>\n\n                                    <div *ngIf=\"creditCardNameOnCard.errors.minlength\">\n                                        Name must be at least 2 characters long\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"row\">\n                        <div class=\"col-md-2\"> <label>Card Number</label></div>\n                        <div class=\"col-md-9\">\n                            <div class=\"input-space\">\n                                <input formControlName=\"cardNumber\" type=\"text\">\n\n                                <div *ngIf=\"creditCardNumber.invalid && (creditCardNumber.dirty || creditCardNumber.touched)\" style=\"color:#dc3545;\">\n                                    <div *ngIf=\"creditCardNumber.errors.required\">\n                                        Credit Card number is required\n                                    </div>\n                                    <div *ngIf=\"creditCardNumber.errors.pattern\">\n                                        Credit Card number must be 16 digits long\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"row\">\n                        <div class=\"col-md-2\"> <label>Security Code</label></div>\n                        <div class=\"col-md-9\">\n                            <div class=\"input-space\">\n                                <input formControlName=\"securityCode\" type=\"text\">\n\n                                <div *ngIf=\"creditCardSecurityCode.invalid && (creditCardSecurityCode.dirty || creditCardSecurityCode.touched)\" style=\"color:#dc3545;\">\n                                    <div *ngIf=\"creditCardSecurityCode.errors.required\">\n                                        Security code is required\n                                    </div>\n                                    <div *ngIf=\"creditCardSecurityCode.errors.pattern\">\n                                        Security code must be 3 digits long\n                                    </div>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"row\">\n                        <div class=\"col-md-2\"> <label>Expiration Month</label></div>\n                        <div class=\"col-md-9\">\n                            <div class=\"input-space\">\n                                <select formControlName=\"expirationMonth\">\n                                    <option *ngFor=\"let tempMonth of creditCardMonths\">\n                                        {{ tempMonth }}\n                                    </option>\n                                </select>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"row\">\n                        <div class=\"col-md-2\"> <label>Expiration Year</label></div>\n                        <div class=\"col-md-9\">\n                            <div class=\"input-space\">\n                                <select formControlName=\"expirationYear\" (change)=\"selectedMonthsAndYears()\">\n                                    <option *ngFor=\"let tempYear of creditCardYears\">\n                                        {{ tempYear }}\n                                    </option>\n                                </select>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <!-- Review my order -->\n                <div class=\"form-area\">\n                    <h3>Review items and shipping</h3>\n\n                    <p>Quantity: {{ totalQuantity }}</p>\n                    <p>Shipping: FREE</p>\n                    <p>Order total: {{ totalPrice | currency: 'USD' }}</p>\n                </div>\n\n                <!-- submit my order-->\n                <div class=\"text-center\">\n                    <button type=\"submit\" class=\"btn btn-outline-danger\">Place your order</button>\n                    <!-- <button routerLink=\"/order-success\" type=\"submit\" class=\"btn btn-outline-danger\">Place your order</button> -->\n                </div>\n\n            </form>\n\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ShopCartService } from 'src/app/services/shop-cart.service';\n\n@Component({\n  selector: 'app-shop-cart-status',\n  templateUrl: './shop-cart-status.component.html',\n  styleUrls: ['./shop-cart-status.component.css']\n})\nexport class ShopCartStatusComponent implements OnInit {\n\n  totalItemPrice: number = 0.00;\n  totalItemQuantity: number = 0;\n\n  constructor(private shopCartService: ShopCartService) { }\n  \n  ngOnInit(){\n      // subscribe to the shop cart totalPrice\n      this.shopCartService.totalPrice.subscribe(\n        (res) => this.totalItemPrice = res\n      );\n    \n      // subscribe to the shop cart totalQuantity\n      this.shopCartService.totalQuantity.subscribe(\n        (res) => this.totalItemQuantity = res\n      );\n  }\n}\n","<div class=\"cart-area d-n\" style=\"width: 200px !important;\">\n    <a routerLink=\"/shop-cart-detail\" style=\"width: 200px !important;\"> \n      <div class=\"total\"><span> {{totalItemQuantity}}</span> </div> \n      <i class=\"fas fa-cart-arrow-down\" style=\"font-size:25px;\" aria-hidden=\"true\"></i>\n    </a>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css']\n})\nexport class SearchComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  searchByKey(value: string) {\n    console.log(`value=${value}`);\n    this.router.navigateByUrl(`/search/${value}`);\n  }\n}\n","<div class=\"form-header\">\n    <input #myInput type=\"text\" style=\"width:350px;\"\n        placeholder=\"Search for laptops ...\" class=\"form-control\" \n        (keyup.enter)=\"searchByKey(myInput.value)\" />\n\n    <!-- <button (click)=\"searchByKey(myInput.value)\"  class=\"btn btn-danger\" > -->\n    <button (click)=\"searchByKey(myInput.value)\"  class=\"btn btn-outline-light\" >\n        Search\n    </button>\n</div>\n\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'eemall-ecommerce';\n}\n","<div class=\"page-wrapper\">\n\n  <!-- MENU SIDEBAR-->\n  <aside class=\"menu-sidebar d-none d-lg-block\">\n    <div class=\"logo\">\n      <a routerLink=\"/products\">\n        <img src=\"assets/images/mall.png\" alt=\"EEmall\" class=\"img-responsive\"> EEmall\n      </a>\n    </div>\n\n    <app-laptop-category-menu></app-laptop-category-menu>\n    \n    <!-- <div class=\"menu-sidebar-content js-scrollbar1\">\n      <nav class=\"navbar-sidebar\">\n        <ul class=\"list-unstyled navbar-list\">\n          <li>\n            <a routerLink=\"/category/1\" routerLinkActive=\"active-link\">Books</a>\n          </li>\n          <li>\n            <a routerLink=\"/category/2\" routerLinkActive=\"active-link\">Coffee Mugs</a>\n          </li>\n        </ul>\n      </nav>\n    </div> -->\n  </aside>\n  <!-- END MENU SIDEBAR-->\n\n  <!-- PAGE CONTAINER-->\n  <div class=\"page-container\">\n    <!-- HEADER DESKTOP-->\n    <header class=\"header-desktop\" style=\"background-color:rgba(0,0,0,0.8)\">\n      <div class=\"section-content section-content-p30\">\n        <div class=\"container-fluid\">\n          <div class=\"header-wrap\">\n\n            <app-search></app-search>\n            \n            <!-- <form class=\"form-header\" onsubmit=\"return false;\" method=\"GET\">\n              <input class=\"au-input au-input-xl\" type=\"text\" name=\"search\" placeholder=\"Search for laptop ...\" />\n              <button class=\"au-btn-submit\" type=\"submit\">\n                Search\n              </button>\n            </form> -->\n\n            <app-login-status></app-login-status>\n\n            <app-shop-cart-status></app-shop-cart-status>\n\n\n          </div>\n          <div class=\"account-wrap\"></div>\n        </div>\n      </div>\n    </header>\n    <!-- END HEADER DESKTOP-->\n\n    <!-- MAIN CONTENT-->\n    <router-outlet></router-outlet>\n\n\n  </div>\n</div>\n\n\n\n\n<!-- END PAGE CONTAINER-->\n\n<!-- \n<footer>\n  <ul>\n    <li><a href=\"#\">EEmall Online Shopping</a></li>\n    <li><a href=\"#\">About Us</a></li>\n    <li><a href=\"#\">Contact Us</a></li>\n  </ul>\n</footer>  \n-->\n\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n\n  constructor(private Auth: AuthService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  loginUser(event) {\n    event.preventDefault();\n    const target = event.target;\n    const username = target.querySelector(\"#username\").value;\n    const password = target.querySelector(\"#password\").value;\n\n    this.Auth.getUserDetails(username, password).subscribe(data => {\n      console.log(data)\n      if (data.code == 1) {\n        window.alert(\"Wrong username or password!\")\n        this.Auth.setLoggedIn(false)\n        this.Auth.setUserEmail(\"\")\n      } else {\n        console.log(\"Login success\")\n        this.Auth.setLoggedIn(true)\n        this.Auth.setUserEmail(username)\n        this.Auth.authStatusListener.next(true)\n        this.router.navigate(['product'])\n      }\n    })\n\n  }\n\n}\n","<div class=\"main-content page-m\">\n    <div class=\"section-content section-content-p30\">\n        <div class=\"container-fluid\">\n\n\n            <!-- <form [formGroup]=\"LoginFormGroup\" (ngSubmit)=\"onSubmit()\"> -->\n            <form (submit)=\"loginUser($event)\">\n\n                <!-- customer form group -->\n                <div class=\"form-area\">\n                    <h3>Customer Login</h3>\n\n\n                    <div class=\"row\">\n                        <div class=\"col-md-2\"> <label>Account:</label></div>\n                        <div class=\"col-md-9\">\n                            <div class=\"input-space\">\n                                <input id=\"username\" type=\"text\">\n\n                                <!-- <div *ngIf=\"email.invalid && (email.dirty || email.touched)\" style=\"color:#dc3545;\">\n\n                                    <div *ngIf=\"email.errors.required\">\n                                        Email is required\n                                    </div>\n\n                                    <div *ngIf=\"email.errors.pattern\">\n                                        Email format: \"example@gmail.com\"\n                                    </div>\n\n                                </div> -->\n\n\n                            </div>\n                        </div>\n                    </div>\n\n\n                    <div class=\"row\">\n                        <div class=\"col-md-2\"> <label>Password:</label></div>\n                        <div class=\"col-md-9\">\n                            <div class=\"input-space\">\n                                <input id=\"password\" type=\"text\">\n\n                                \n                                <!-- <div *ngIf=\"email.invalid && (email.dirty || email.touched)\" style=\"color:#dc3545;\">\n\n                                    <div *ngIf=\"email.errors.required\">\n                                        Email is required\n                                    </div>\n\n                                    <div *ngIf=\"email.errors.pattern\">\n                                        Email format: \"example@gmail.com\"\n                                    </div>\n\n                                </div> -->\n\n                                \n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n\n\n                <!-- submit my order-->\n                <div class=\"text-center\">\n                    <button type=\"submit\" class=\"btn btn-outline-danger\">Login</button>\n                </div>\n\n            </form>\n\n        </div>\n    </div>\n</div>","import { ShopCartItem } from \"./shop-cart-item\";\n\nexport class OrderItem {\n    imageUrl: string;\n    unitPrice: number;\n    quantity: number;\n    productId: string;\n\n    constructor(shopCartItem: ShopCartItem) {\n        this.imageUrl = shopCartItem.imageUrl;\n        this.quantity = shopCartItem.quantity;\n        this.unitPrice = shopCartItem.unitPrice;\n        this.productId = shopCartItem.id;\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\n\nimport { AppComponent } from './app.component';\nimport { LaptopListComponent } from './components/laptop-list/laptop-list.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport { LaptopService } from './services/laptop.service';\nimport {Routes, RouterModule} from '@angular/router';\nimport { LaptopCategoryMenuComponent } from './components/laptop-category-menu/laptop-category-menu.component';\nimport { SearchComponent } from './components/search/search.component';\nimport { LaptopDetailsComponent } from './components/laptop-details/laptop-details.component';\nimport { ShopCartStatusComponent } from './components/shop-cart-status/shop-cart-status.component';\nimport { ShopCartDetailComponent } from './components/shop-cart-detail/shop-cart-detail.component';\nimport { CheckoutComponent } from './components/checkout/checkout.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { OrderSuccessComponent } from './components/order-success/order-success.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { LoginStatusComponent } from './components/login-status/login-status.component';\nimport { SignUpComponent } from './components/sign-up/sign-up.component';\nimport { AuthGuard } from './auth.guard';\nimport { ProfileComponent } from './components/profile/profile.component';\n\nconst routes: Routes=[\n  {path: 'signup', component: SignUpComponent},\n  {path: 'login', component: LoginComponent},\n  {path: 'profile', component: ProfileComponent, canActivate: [AuthGuard]},\n  {path: 'order-success', component: OrderSuccessComponent},\n  {path: 'shop-cart-detail', component: ShopCartDetailComponent, canActivate: [AuthGuard]},\n  {path: 'checkout', component: CheckoutComponent, canActivate: [AuthGuard]},\n  {path: 'product/:id', component: LaptopDetailsComponent},\n  {path: 'search/:keyword', component: LaptopListComponent},\n  {path: 'categories/:id', component: LaptopListComponent},\n  {path: 'category', component: LaptopListComponent},\n  {path: 'product', component: LaptopListComponent},\n  {path: '', redirectTo: '/product', pathMatch: 'full'},\n  {path: '**', redirectTo: '/product', pathMatch: 'full'},\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LaptopListComponent,\n    LaptopCategoryMenuComponent,\n    SearchComponent,\n    LaptopDetailsComponent,\n    ShopCartStatusComponent,\n    ShopCartDetailComponent,\n    CheckoutComponent,\n    OrderSuccessComponent,\n    LoginComponent,\n    LoginStatusComponent,\n    SignUpComponent,\n    ProfileComponent\n  ],\n  imports: [\n    RouterModule.forRoot(routes),\n    BrowserModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    NgbModule\n  ],\n  providers: [LaptopService, AuthGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Purchase } from '../common/purchase';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ShopCheckoutService {\n\n  private laptopsPurchaseUrl = 'http://3.21.204.124:8080/api/checkout/purchase';\n\n  constructor(private httpClient: HttpClient) { \n\n  }\n\n  handleOrder(purchase: Purchase): Observable<any> {\n    return this.httpClient.post<Purchase>(this.laptopsPurchaseUrl, purchase);    \n  }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  loggedInStatus = false;\n\n  authStatusListener = new Subject<boolean>(); \n\n  userEmail = \"\";\n\n  constructor(private http: HttpClient) { }\n\n  getAuthStatusListener() {\n    return this.authStatusListener.asObservable\n  }\n\n  setLoggedIn(value: boolean) {\n    this.loggedInStatus = value\n  }\n\n  get isLoggedIn() {\n    return this.loggedInStatus\n  }\n\n  setUserEmail(email: string) {\n    this.userEmail = email;\n  }\n\n  signUpUser(email, name, password, address, phone): Observable<SignUpResponse> {\n    let body = JSON.stringify({\n      'email':email,\n      'name':name,\n      'password':password,\n      'address':address,\n      'phone':phone\n    })\n    console.log(body)\n    let options = {\n      headers: new HttpHeaders()\n      .set('Content-Type', 'application/json')\n      .set('withCredentials', 'true')\n      .set('Access-Control-Allow-Credentials', 'true')\n      .set('Access-Control-Allow-Origin', '*')\n    };\n    return this.http.post<SignUpResponse>('http://localhost:8080/register',body, options)\n  }\n\n  getUserDetails(username, password): Observable<LoginResponse> {\n    let body = new URLSearchParams();\n    body.set('username', username);\n    body.set('password', password);\n\n    let options = {\n      headers: new HttpHeaders()\n      .set('Content-Type', 'application/x-www-form-urlencoded')\n      .set('withCredentials', 'true')\n      .set('Access-Control-Allow-Credentials', 'true')\n      .set('Access-Control-Allow-Origin', '*')\n    };\n\n    return this.http\n    .post<LoginResponse>('http://localhost:8080/login', body.toString(), options)\n  }\n\n  logout() {\n    this.loggedInStatus = false;\n    this.authStatusListener.next(false);\n  }\n\n}\n\ninterface LoginResponse {\n  code: number,\n  message: string\n}\n\ninterface SignUpResponse {\n  id: number,\n  email: string,\n  password: string,\n  name: string,\n  phone: string,\n  address: string,\n  role: string\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Country } from '../common/country';\nimport { State } from '../common/state';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EEmallFormService {\n\n  private countryUrl = 'http://3.21.204.124:8080/api/countries';\n  private stateUrl = 'http://3.21.204.124:8080/api/states';\n\n  constructor(private httpClient: HttpClient) { }\n\n  getCreditCardMonths(beginMonth: number): Observable<number[]> {\n    let months: number[] = [];\n    // create an array for Months dropdown list\n    for (let tempMonth = beginMonth; tempMonth <= 12; tempMonth++) {\n      months.push(tempMonth);\n    }\n    return of(months);\n  }\n\n\n  getCreditCardYears(): Observable<number[]> {\n\n    let years: number[] = [];\n    // Create an array for Years downlist list\n    const beginYear: number = new Date().getFullYear();\n    const endYear: number = beginYear + 10;\n\n    for (let tempYear = beginYear; tempYear <= endYear; tempYear++) {\n      years.push(tempYear);\n    }\n    return of(years);\n  }\n\n  getCountries(): Observable<Country[]> {\n    return this.httpClient.get<GetResponseCountries>(this.countryUrl).pipe(\n      map(res => res._embedded.countries)\n    );\n  }\n\n\n  getStates(couCode: string): Observable<State[]> {\n\n    // search url\n    const searchStatesUrl = `${this.stateUrl}/search/findByCountryCode?code=${couCode}`;\n\n    return this.httpClient.get<GetResponseStates>(searchStatesUrl).pipe(\n      map(response => response._embedded.states)\n    );\n  }\n}\n\n\n\n\ninterface GetResponseCountries {\n  _embedded: {\n    countries: Country[];\n  }\n}\n\ninterface GetResponseStates {\n  _embedded: {\n    states: State[];\n  }\n}","<div class=\"login-status-header\">\n\n    <!-- <div *ngIf=\"isAuthenticated && userFullName\" class=\"login-status-user-info\"> -->\n    <!-- <div class=\"login-status-user-info\"> -->\n        <!-- Dear {{ userFullName }}! -->\n    <button *ngIf=\"isAuthenticated\" (click)=\"linkToProfile()\" class=\"btn btn-outline-light\" style=\"margin-right: 6px\">Profile</button>\n    <!-- </div> -->\n\n\n    <button *ngIf=\"!isAuthenticated\" (click)=\"onSubmit()\" class=\"btn btn-outline-light\">Login</button>\n    <button *ngIf=\"isAuthenticated\" (click)=\"onLogout()\" class=\"btn btn-outline-light\">Logout</button>\n    \n    <button *ngIf=\"!isAuthenticated\" (click)=\"linkToSignUp()\" class=\"btn btn-outline-light\" style=\"margin-left: 6px;\">SignUp</button>\n    <!-- <button (click)=\"linkToSignUp()\" class=\"btn btn-outline-light\">SignUp</button> -->\n\n    <!-- <button class=\"btn btn-outline-light\">Logout</button> -->\n\n\n\n<!-- \n    <button *ngIf=\"!isAuthenticated\" routerLink=\"/login\" class=\"security-btn\">Login</button>\n    <button *ngIf=\"isAuthenticated\" (click)=\"logout()\" class=\"security-btn\">Logout</button>\n -->\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/auth.service';\nimport { Subscription } from 'rxjs'\n\n@Component({\n  selector: 'app-login-status',\n  templateUrl: './login-status.component.html',\n  styleUrls: ['./login-status.component.css']\n})\nexport class LoginStatusComponent implements OnInit {\n\n  isAuthenticated: boolean = false;\n  customerFullName: string;\n  private authListenerSubs: Subscription;  \n\n  constructor(private router: Router, private auth: AuthService) { }\n\n  ngOnInit(): void {\n    this.authListenerSubs = this.auth.authStatusListener\n    .subscribe(isAuthenticated => this.isAuthenticated = isAuthenticated)\n  }\n\n  ngOnDestroy(){  \n    this.authListenerSubs.unsubscribe();  \n  } \n\n  getUserDetails() {\n    // if (this.isAuthenticated) {\n\n    // }\n  }\n\n  onSubmit() {\n    this.router.navigateByUrl(\"/login\");\n  }\n\n  onLogout() {\n    this.auth.logout();\n    this.auth.setUserEmail(\"\");\n    this.router.navigate([\"login\"]);\n  }\n\n  linkToSignUp() {\n    this.router.navigateByUrl(\"/signup\");\n  }\n\n  linkToProfile() {\n    this.router.navigate([\"profile\"])\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Laptop } from 'src/app/common/laptop';\nimport { ShopCartItem } from 'src/app/common/shop-cart-item';\nimport { LaptopService } from 'src/app/services/laptop.service';\nimport { ShopCartService } from 'src/app/services/shop-cart.service';\n\n@Component({\n  selector: 'app-laptop-list',\n  templateUrl: './laptop-list-grid.component.html',\n  // templateUrl: './laptop-list.component.html',\n  // templateUrl: './laptop-list-table.component.html',\n  styleUrls: ['./laptop-list.component.css']\n})\nexport class LaptopListComponent implements OnInit {\n\n  laptops: Laptop[] = [];\n  prevCategoryId: number = 1;\n  curCategoryId: number = 1;\n  search: boolean = false;\n\n  pageNum: number = 1;\n  elementsPerPage: number = 6;\n  totalElements: number = 0;\n\n  prevKeyWord: string = null;\n\n  constructor(private laptopService: LaptopService, private shopCartService: ShopCartService,\n    private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(() => {\n      this.showLaptops();\n    })\n  }\n\n  showLaptops() {\n    this.search = this.route.snapshot.paramMap.has('keyword');\n    if (this.search) {\n      this.handleSearchLaptops();\n    } else {\n      this.handleListLaptops();\n    }\n  }\n\n  handleSearchLaptops() {\n    const keyWord: string = this.route.snapshot.paramMap.get('keyword');\n\n    //if we have a different keyword than previous, then set my page number to 1\n    if (this.prevKeyWord != keyWord){\n      this.pageNum = 1;\n    }\n\n    this.prevKeyWord = keyWord;\n\n    //now search for the products using keyword\n    this.laptopService.searchLaptopsPaginate(\n      this.pageNum - 1,\n      this.elementsPerPage,\n      keyWord).subscribe(\n        (arrObj) => {\n          this.laptops = arrObj._embedded.products;\n          this.pageNum = arrObj.page.number + 1;\n          this.elementsPerPage = arrObj.page.size;\n          this.totalElements = arrObj.page.totalElements;\n        }\n      );\n  }\n\n  handleListLaptops() {\n    //check if \"id\" parameter is available\n    const categoryIdFlag: boolean = this.route.snapshot.paramMap.has('id');\n\n    //get the \"id\" param string. convert string to a number using the \"+\" symbol\n    //otherwise this.currentCategoryId = 1;\n    this.curCategoryId = (categoryIdFlag) ? +this.route.snapshot.paramMap.get('id') : 0;\n\n\n    if (this.prevCategoryId != this.curCategoryId) {\n      this.pageNum = 1;      \n    }\n\n    this.prevCategoryId = this.curCategoryId;\n\n    console.log(`currentCategoryId=${this.curCategoryId}, PageNumber=${this.pageNum}`)\n\n\n\n    // now get the products for the given category id\n    this.laptopService.getLaptopListPaginate(\n                  this.pageNum - 1, \n                  this.elementsPerPage,\n                  this.curCategoryId).subscribe( \n                    (arrObj) => {\n                      this.laptops = arrObj._embedded.products;\n                      this.pageNum = arrObj.page.number + 1;\n                      this.elementsPerPage = arrObj.page.size;\n                      this.totalElements = arrObj.page.totalElements;\n                    }\n                  );\n  }\n\n  // handleResult() {\n  //   return arrObj => {\n  //     this.laptops = arrObj._embedded.products;\n  //     this.pageNum = arrObj.page.number + 1;\n  //     this.elementsPerPage = arrObj.page.size;\n  //     this.totalElements = arrObj.page.totalElements;\n  //   };\n  // }\n\n  changePageQuantity(theNumOfPages: number){\n    this.elementsPerPage = theNumOfPages;\n    this.pageNum = 1;\n    this.showLaptops();\n  }\n\n\n  addToShoppingCart(templaptop: Laptop){\n    console.log(`Adding to cart: ${templaptop.name}, ${templaptop.unitPrice}`)\n\n    const tempCartItem = new ShopCartItem(templaptop);\n    this.shopCartService.addToShopCart(tempCartItem);\n  }\n\n}\n","<div class=\"main-content\">\n    <div class=\"section-content section-content-p30\">\n        <div class=\"container-fluid\">\n            <div class=\"row\">\n                <!-- loop over the collection of products -->\n                <div *ngFor=\"let laptop of laptops\" class=\"col-md-3\">\n\n                    <div class=\"product-box\">\n                        \n                        <!-- add a link to product image -->\n                        <a routerLink=\"/product/{{laptop.id}}\">\n                            <img src=\"{{laptop.imageUrl}}\" class=\"img-responsive\">\n                        </a>\n\n                        <!-- add a link to product name -->\n                        <a routerLink=\"/product/{{laptop.id}}\">\n                            <h1>{{laptop.name}}</h1>\n                        </a>\n\n                        <div class=\"price\">{{laptop.unitPrice | currency:'USD'}}</div>\n                        <!-- <button (click)=\"addToShoppingCart(laptop)\" class=\"btn btn-danger\">Add to cart</button> -->\n                        <button (click)=\"addToShoppingCart(laptop)\" class=\"btn btn-outline-danger\">Add to cart</button>\n                    </div>\n                </div>\n\n                <!-- if the required laptop you search is not existed, then display a notfound message -->\n\n                <!-- <div *ngIf=\"laptops?.length == 0\" class=\"alert alert-warning col-md-10\" role=\"alert\">\n                    <h4 class=\"alert-heading\">Sorry</h4>\n                    <h4>No laptop found!</h4>\n                    <hr>\n                    <p class=\"mb-0\">You need to input correct keyword to search!</p>\n                </div> -->\n\n            </div>\n\n            <!-- begin footer -->\n            <div class=\"footer-pagination\">\n                <div class=\"row\">\n                    <div class=\"col-md-6\"> </div>\n\n                    <div class=\"col-md-6\">\n                        <div class=\"row\">\n                            <div class=\"col-md-9\" style=\"padding-right:15%\">\n                                <ngb-pagination\n                                    [(page)]=\"pageNum\"\n                                    [pageSize]=\"elementsPerPage\"\n                                    [collectionSize]=\"totalElements\"\n                                    [maxSize] = \"5\"\n                                    [boundaryLinks] = \"true\"\n                                    (pageChange)=\"showLaptops()\">\n                                </ngb-pagination>\n                            </div>\n\n                            <!-- change the total numbers of laptops displaying on page -->\n                            <div class=\"col-md-3 mt-2\" style=\"text-align: right;\">\n                                <span class=\"mr-2\">Quantity</span>\n        \n                                <select (change)=\"changePageQuantity($event.target.value)\">\n                                    <option>2</option>\n                                    <option selected=\"true\">5</option>\n                                    <option>10</option>\n                                    <option>20</option>\n                                    <option>30</option>\n                                </select>\n                            </div>\n\n\n                        </div>\n                    </div>\n\n                    \n                </div>\n            </div>\n\n            <!-- end footer -->\n        </div>\n    </div>\n</div>","export class Laptop {\n    id: string;\n    sku: string;\n    name: string;\n    description: string;\n    unitPrice: number;\n    imageUrl: string;\n    active: boolean;\n    unitsInStock: number;\n    dateCreated: Date;\n    lastUpdated: Date;\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private auth: AuthService, private router: Router) {\n\n  }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n      if (this.auth.isLoggedIn) {\n        return true\n      } else {\n        this.router.navigate(['/login'])\n        return false\n      }\n  }\n  \n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/auth.service';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.css']\n})\nexport class SignUpComponent implements OnInit {\n\n  constructor(private auth: AuthService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  onSignUp(event) {\n    event.preventDefault();\n    const target = event.target;\n    const email = target.querySelector(\"#email\").value;\n    const name = target.querySelector(\"#name\").value;\n    const address = target.querySelector(\"#address\").value;\n    const phone = target.querySelector(\"#phone\").value;\n    const password = target.querySelector(\"#password\").value;\n    console.log(email, name, address, password, phone)\n    this.auth.signUpUser(email, name, password, address, phone)\n    .subscribe(data => {\n      alert(\"Registered Successfully\")\n      this.router.navigate([\"login\"])\n    });\n  \n  }\n\n}\n\ninterface SignUpRequest {\n  email: string,\n  password: string,\n  phone: string,\n  name: string,\n  address: string\n}\n","<div class=\"main-content page-m\">\n    <div class=\"section-content section-content-p30\">\n        <div class=\"container-fluid\">\n\n\n            <!-- <form [formGroup]=\"LaptopsCheckoutFormGroup\" (ngSubmit)=\"onSubmit()\"> -->\n                \n            <form (submit)=\"onSignUp($event)\">\n\n\n\n                <!-- customer form group -->\n                <div class=\"form-area\">\n                    <h3>Registration</h3>\n\n                    <div class=\"row\">\n                        <div class=\"col-md-2\"> <label>User Name:</label></div>\n                        <div class=\"col-md-9\">\n                            <div class=\"input-space\">\n                                <input id=\"name\" type=\"text\">\n\n                                <!-- \n                                <div *ngIf=\"fullName.invalid && (fullName.dirty || fullName.touched)\" style=\"color:#dc3545;\">\n\n                                    <div *ngIf=\"fullName.errors.required || fullName.errors.detectOnlyWhitespace\">\n                                        Name is required\n                                    </div>\n\n                                    <div *ngIf=\"fullName.errors.minlength\">\n                                        Name must be at least 3 characters long\n                                    </div>\n                                </div> \n                                -->\n\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"row\">\n                        <div class=\"col-md-2\"> <label>Password:</label></div>\n                        <div class=\"col-md-9\">\n                            <div class=\"input-space\">\n                                <input id=\"password\" type=\"text\">\n\n                                <!-- \n                                <div *ngIf=\"password.invalid && (password.dirty || password.touched)\" style=\"color:#dc3545;\">\n\n                                    <div *ngIf=\"password.errors.required || password.errors.detectOnlyWhitespace\">\n                                        Last Name is required\n                                    </div>\n\n                                    <div *ngIf=\"password.errors.minlength\">\n                                        Last Name must be at least 3 characters long\n                                    </div>\n\n                                </div>\n\n                                 -->\n\n\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"row\">\n                        <div class=\"col-md-2\"> <label>Email:</label></div>\n                        <div class=\"col-md-9\">\n                            <div class=\"input-space\">\n                                <input id=\"email\" type=\"text\">\n\n                                <!-- \n                                <div *ngIf=\"email.invalid && (email.dirty || email.touched)\" style=\"color:#dc3545;\">\n\n                                    <div *ngIf=\"email.errors.required\">\n                                        Email is required\n                                    </div>\n\n                                    <div *ngIf=\"email.errors.pattern\">\n                                        Email format: \"example@gmail.com\"\n                                    </div>\n\n                                </div> \n                                -->\n\n\n                            </div>\n                        </div>\n                    </div>\n\n\n                    <div class=\"row\">\n                        <div class=\"col-md-2\"> <label>Address:</label></div>\n                        <div class=\"col-md-9\">\n                            <div class=\"input-space\">\n                                <input id=\"address\" type=\"text\">\n\n                                <!-- \n                                <div *ngIf=\"address.invalid && (address.dirty || address.touched)\" style=\"color:#dc3545;\">\n\n                                    <div *ngIf=\"address.errors.required\">\n                                        Email is required\n                                    </div>\n\n                                    <div *ngIf=\"address.errors.pattern\">\n                                        Email format: \"example@gmail.com\"\n                                    </div>\n\n                                </div> -->\n\n\n                            </div>\n                        </div>\n                    </div>\n\n\n                    <div class=\"row\">\n                        <div class=\"col-md-2\"> <label>Phone Number:</label></div>\n                        <div class=\"col-md-9\">\n                            <div class=\"input-space\">\n                                <input id=\"phone\" type=\"text\">\n\n                                    <!-- \n                                <div *ngIf=\"address.invalid && (phoneNum.dirty || phoneNum.touched)\" style=\"color:#dc3545;\">\n\n                                    <div *ngIf=\"phoneNum.errors.required\">\n                                        Email is required\n                                    </div>\n\n                                    <div *ngIf=\"phoneNum.errors.pattern\">\n                                        Email format: \"example@gmail.com\"\n                                    </div>\n\n                                </div> -->\n\n\n                            </div>\n                        </div>\n                    </div>\n  \n                </div>\n                <!-- signup to create a new account-->\n\n                <div class=\"text-center\">\n                    <button type=\"submit\" class=\"btn btn-outline-danger\">Sign Up</button>\n                </div>\n\n\n\n            </form>    \n\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Laptop } from '../common/laptop';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { LaptopCategory } from '../common/laptop-category';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LaptopService {\n\n  private baseUrl = 'http://3.21.204.124:8080/product';\n  // Note, by default, Spring Data only return 20 items, so we need to chenge the size => 100\n\n  private categoryUrl = 'http://3.21.204.124:8080/categories';\n\n  constructor(private httpClient: HttpClient) { }\n\n  getLaptopList(categoryId: number): Observable<Laptop[]>{\n\n    //need to build URL based on category id \n    const searchUrl = `${this.baseUrl}/search/findByCategoryId?id=${categoryId}`;\n\n    return this.getLaptops(searchUrl);\n  }\n\n  searchLaptops(key: string): Observable<Laptop[]> {\n\n    //need to build URL based on keyword\n    const searchUrl = `${this.baseUrl}/search/findByNameContaining?name=${key}`;\n\n    return this.getLaptops(searchUrl);\n  }\n\n  private getLaptops(searchUrl: string): Observable<Laptop[]> {\n    return this.httpClient.get<GetResponseProducts>(searchUrl).pipe(\n      //this.httpClient.get<any>\n      map(response => response._embedded.products)\n    );\n  }\n\n  getLaptopCategories(): Observable<LaptopCategory[]> {\n    return this.httpClient.get<GetResponseProductCategory>(this.categoryUrl).pipe(\n      //this.httpClient.get<any>\n      map(response => response._embedded.productCategories)\n    );\n  }\n\n  getLaptop(laptopId: number): Observable<Laptop> {\n    //create a based URL on product id\n    const laptopUrl = `${this.baseUrl}/${laptopId}`;\n    return this.httpClient.get<Laptop>(laptopUrl);\n  }\n\n  getLaptopListPaginate(thePage: number, thePageSize: number, categoryId: number): Observable<GetResponseProducts>{\n\n    //need to build URL based on category id, page and size\n    const searchUrl = categoryId == 0 ? `${this.baseUrl}?page=${thePage}&size=${thePageSize}` \n    : `${this.categoryUrl}/${categoryId}?page=${thePage}&size=${thePageSize}`;\n\n    return this.httpClient.get<GetResponseProducts>(searchUrl);\n  }\n\n  searchLaptopsPaginate(pageNum: number, pageSize: number, keyword: string): Observable<GetResponseProducts> {\n\n    // need to build URL based on keyword, page and size \n    const searchUrl = `${this.baseUrl}/search?keyword=${keyword}` + `&page=${pageNum}&size=${pageSize}`;\n\n    return this.httpClient.get<GetResponseProducts>(searchUrl);\n  }\n\n}\n\ninterface GetResponseProducts {\n  _embedded: {\n    products: Laptop[];\n  },\n  page: {\n    size: number,\n    totalElements:number,\n    totalPages:number,\n    number: number\n  }\n}\n\ninterface GetResponseProductCategory {\n  _embedded: {\n    productCategories: LaptopCategory[];\n  }\n}\n","import { Laptop } from \"./laptop\";\n\nexport class ShopCartItem {\n    id: string;\n    name: string;\n    imageUrl: string;\n    unitPrice: number;\n    quantity: number;\n\n    constructor(laptop: Laptop){\n        this.id = laptop.id;\n        this.name = laptop.name;\n        this.imageUrl = laptop.imageUrl;\n        this.unitPrice = laptop.unitPrice;\n\n        this.quantity = 1;\n    }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}